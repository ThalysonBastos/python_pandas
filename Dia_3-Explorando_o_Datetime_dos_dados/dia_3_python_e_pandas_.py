# -*- coding: utf-8 -*-
"""Dia 3 Python e Pandas .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mri6qLeJXy4InDVP_1UKd6arZfmKr6gh
"""

import pandas as pd

dados_2010_1 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20101.csv?raw=true')
dados_2010_2 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20102.csv?raw=true')
dados_2011_1 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20111.csv?raw=true')
dados_2011_2 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20112.csv?raw=true')
dados_2012_1 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20121.csv?raw=true')
dados_2012_2 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20122.csv?raw=true')
dados_2013_1 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20131.csv?raw=true')
dados_2013_2 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20132.csv?raw=true')
dados_2014_1 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20141.csv?raw=true')
dados_2014_2 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20142.csv?raw=true')
dados_2015_1 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20151.csv?raw=true')
dados_2015_2 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20152.csv?raw=true')
dados_2016_1 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20161.csv?raw=true')
dados_2016_2 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20162.csv?raw=true')
dados_2017_1 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20171.csv?raw=true')
dados_2017_2 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20172.csv?raw=true')
dados_2018_1 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20181.csv?raw=true')
dados_2018_2 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20182.csv?raw=true')
dados_2019_1 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20191.csv?raw=true')
dados_2019_2 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20192.csv?raw=true')
dados_2020_1 = pd.read_csv('https://github.com/ThalysonBastos/python_pandas/blob/main/Dia_1-Importando_dados/Datasets/dados_emprestimos/emprestimos-20201.csv?raw=true')

emprestimos_biblioteca = pd.concat([dados_2010_1, dados_2010_2, dados_2011_1, dados_2011_2, dados_2013_1, dados_2013_2, dados_2014_1, dados_2014_2, dados_2015_1, dados_2015_2, dados_2016_1, dados_2016_2,
                                    dados_2017_1, dados_2017_2, dados_2018_1, dados_2018_2, dados_2019_1, dados_2019_2, dados_2020_1], ignore_index=True)

emprestimos_biblioteca

emprestimos_biblioteca.value_counts()

#Excluindo duplicatas
emprestimos_biblioteca = emprestimos_biblioteca.drop_duplicates()

emprestimos_biblioteca.value_counts()

emprestimos_biblioteca.head()

#importando mais dados
dados_exemplares = pd.read_parquet('https://github.com/FranciscoFoz/7_Days_of_Code_Alura-Python-Pandas/raw/main/Dia_1-Importando_dados/Datasets/dados_exemplares.parquet')

dados_exemplares

#Unindo os dataFrames
emprestimos_completo = emprestimos_biblioteca.merge(dados_exemplares)
emprestimos_completo

emprestimos_completo.head()

#atribuindo coluna com nomeclatura da CDU

CDU_lista = []
for CDU in emprestimos_completo['localizacao']:
  if(CDU < 100):
    CDU_lista.append('Generalidades')
  elif(CDU < 200):
    CDU_lista.append('Filosifia e psicologia')
  elif(CDU < 300):
    CDU_lista.append('Religião')
  elif(CDU < 400):
    CDU_lista.append('Ciências Sociais')
  elif(CDU < 500):
    CDU_lista.append('Classe Vaga')
  elif(CDU < 600):
    CDU_lista.append('Matemática e Ciências Naturais')
  elif(CDU < 700):
    CDU_lista.append('Ciências Aplicadas')
  elif(CDU < 800):
    CDU_lista.append('Belas Artes')
  elif(CDU < 900):
    CDU_lista.append('Linguagem')
  else:
    CDU_lista.append('Geografia. Biologia. História')

emprestimos_completo['CDU_geral'] = CDU_lista

emprestimos_completo.head()

#Excluindo uma coluna no sistema "registro_sistema"
emprestimos_completo.drop(columns=['registro_sistema'], inplace=True)

emprestimos_completo.head()

#Modificando tipo de dado da matrícula para string
emprestimos_completo['matricula_ou_siape'] = emprestimos_completo['matricula_ou_siape'].astype('string')

import seaborn as sns
import matplotlib.ticker as ticker
import matplotlib.pyplot as plt

emprestimos_completo.head()

#Explorando o DateTime
#Note que o "id_emprestimo" é cada empréstimo realizado que pode ter 1 ou mais exemplares.
#Portando cada linha é o empréstimo de cada exemplar.

emprestimos_completo.loc[emprestimos_completo['id_emprestimo']==1775991]

emprestimos_completo['id_emprestimo'].value_counts()

#Quantos emprestimos foram realizados no total

emprestimos_total = len(emprestimos_completo['id_emprestimo'].drop_duplicates())
emprestimos_total

print('O número de empréstimos total foi de: ' + str(emprestimos_total))

#Quantos exemplares foram no total

exemplares_total = len(emprestimos_completo['id_exemplar'].drop_duplicates())
exemplares_total

print('O número de exemplares total foi de: ' + str(exemplares_total))

#quantidade de exemplares emprestados por ano

emprestimos_data = pd.DataFrame(emprestimos_completo['data_emprestimo'].value_counts()).reset_index()
emprestimos_data.columns = ['data', 'quantidade']
emprestimos_data['data'] = pd.to_datetime(emprestimos_data['data'])
emprestimos_data

emprestimos_por_ano = emprestimos_data.groupby(emprestimos_data['data'].dt.year)['quantidade'].sum()
emprestimos_por_ano.index.name = 'ano'
emprestimos_por_ano

#configurando o tema dos gráficos

sns.set_theme(context='notebook',
              style='darkgrid',
              palette='deep',
              font_scale=1.3,
              rc={"figure.figsize":(15,8)})

ax = sns.lineplot(data=emprestimos_por_ano.reset_index(), x='ano', y='quantidade')# Convert the Series to a DataFrame using reset_index()
ax.set(xlabel=None, ylabel=None)
ax.tick_params(axis='x', rotation=45)
ax.yaxis.set_major_formatter(ticker.FuncFormatter(lambda x, p: format(int(x), ',').replace(',','.')))

ax.set_title('Quantidade de empréstimos por ano' + '\n', size=20, loc='left', weight='bold')
ax.set_ylabel('Quantidade de empréstimos', size=15)

ax=ax

